
# Future
Future接口主要包括5个方法

get()方法可以当任务结束后返回一个结果，如果调用时，工作还没有结束，则会阻塞线程，直到任务执行完毕

get(long timeout,TimeUnit unit) 最多等待timeout的时间就会返回结果

cancel(boolean mayInterruptIfRunning)方法可以用来停止一个任务，
如果任务可以停止(通过mayInterruptIfRunning来进行判断)，则可以返回true,
如果任务已经完成或者已经停止，或者这个任务无法停止，则会返回false.

isDone()方法判断当前Task是否完成

isCancel()方法判断当前Task是否取消



## RunnableFuture

这个接口同时继承Future接口和Runnable接口，在成功执行run()方法后，可以通过Future访问执行结果。
这个接口都实现类是FutureTask,一个可取消的异步计算，这个类提供了Future的基本实现，它实现了启动和取消一个计算，查询这个计算是否已完成，恢复计算结果。
计算的结果只能在计算已经完成的情况下恢复。如果计算没有完成，get方法会阻塞，一旦计算完成，这个计算将不能被重启和取消，除非调用runAndReset方法。

FutureTask能用来包装一个Callable或Runnable对象，因为它实现了Runnable接口，而且它能被传递到Executor进行执行。
为了提供单例类，这个类在创建自定义的工作类时提供了protected构造函数。





